/*!            MindNames - менеджер констант и переменных, присутствующих в аксиомах

(с) 2018-oct: steps: synset.com, qudata.com
****************************************************************************************/
#ifndef MindNamesH
#define MindNamesH

#include "Value.h"
#include "Variable.h"

#include <vector>

//=======================================================================================
//! ћенеджер констант и переменных, присутствующих в аксиомах
//
class MindNames
{
public:
   vector<Value>       _consts;                   //!< список констант
   vector<VariablePtr> _vars;                     //!< список переменных

   MindNames() {}

   void clear()
   {
      _consts.clear();   _vars.clear();
   }
   //------------------------------------------------------------------------------------
   //! ѕолучить идентификатор переменной или константы. Ќомера переменных идут с 1
   int get(ExprPtr ex);

   //------------------------------------------------------------------------------------
   //! ѕолучить идентификатор константы
   int get(const Value & v)
   {
      for (size_t i = 0; i < _consts.size(); i++) {// ищем такую константу
         if ((_consts[i] == v) == Logic::True)
            return int(i);
      }
      _consts.push_back(v);                       // нова€ константа - добавл€ем
      return ((int)_consts.size()) - 1;
   }
   //------------------------------------------------------------------------------------
   //! ѕолучить идентификатор переменной
   int get(VariablePtr v)
   {
      for (size_t i = 0; i < _vars.size(); i++) { // ищем такую переменную
         if (_vars[i] == v)
            return int(i);
      }
      _vars.push_back(v);                         // нова€ переменна€ - добавл€ем
      return ((int)_vars.size()) - 1;
   }
};

#endif